---
description: Pipeline for processing Zero Networks Audit logs
processors:
- rename:
    field: message
    target_field: event.original
- json:
    field: event.original
    target_field: json
- date:
    field: json.isoTimestamp
    formats:
    - date_optional_time
    target_field: '@timestamp'
- convert:
    field: json.auditType
    type: string
    ignore_missing: true
- rename:
    field: json.auditType
    target_field: event.code
    ignore_missing: true
- rename:
    field: json.performedBy.id
    target_field: user.id
    ignore_missing: true
- rename:
    field: json.performedBy.name
    target_field: user.full_name
    ignore_missing: true
- rename:
    field: json.enforcementSource
    target_field: zeronetworks.audit.enforcementSource
    ignore_missing: true
    if: 'ctx.slack?.entity == null'
- rename:
    field: json.userRole
    target_field: zeronetworks.audit.userRole
    ignore_missing: true
    if: 'ctx.slack?.entity == null'
- rename:
    field: json.reportedObjectId
    target_field: zeronetworks.audit.reportedObjectId
    ignore_missing: true
    if: 'ctx.slack?.entity == null'
- rename:
    field: json.reportedObjectGeneration
    target_field: zeronetworks.audit.reportedObjectGeneration
    ignore_missing: true
    if: 'ctx.slack?.entity == null'
- rename:
    field: json.parentObjectId
    target_field: zeronetworks.audit.parentObjectId
    ignore_missing: true
    if: 'ctx.slack?.entity == null'
- foreach:
    field: json.destinationEntitiesList
    ignore_missing: true
    processor:
      set:
        field: zeronetworks.audit.destinationEntitiesList.name
        value: '{{{_ingest._value.name}}}'
- foreach:
    field: json.destinationEntitiesList
    ignore_missing: true
    processor:
      set:
        field: zeronetworks.audit.destinationEntitiesList.id
        value: '{{{_ingest._value.id}}}'
- json:
    field: json.details
    target_field: zeronetworks.audit.details
- append:
    field: related.user
    value: '{{user.id}}'
    allow_duplicates: false
    if: ctx.user?.id != null
- append:
    field: related.user
    value: '{{user.full_name}}'
    allow_duplicates: false
    if: ctx.user?.id != null
- fingerprint:
    fields: 
      - event.original
    target_field: event.id
- set:
    field: _id
    copy_from: event.id
- script:
    lang: painless
    tag: Add ECS categorization
    params:
## Audit Types
      1:  
        action: 'Asset is being added to protection'
        outcome: success
      2:
        action: 'Asset added to protection'
        outcome: success
      3:
        action: 'Failed to add asset to protection'
        outcome: failure
      4:
        action: 'Asset is being removed from protection'
        outcome: success
      5:
        action: 'Removed asset from protection'
        outcome: success
      6:
        action: 'Failed to remove asset from protection'
        outcome: failure
      7:
        action: 'Asset added to learning'
        outcome: success
      8:
        action: 'Asset removed from learning'
        outcome: success
      9:
        action: 'Inbound allow rule created'
        outcome: success
      10:
        action: 'Inbound allow rule deleted'
        outcome: success
      11:
        action: 'Inbound allow rule expired'
        outcome: success
      12:
        action: 'Inbound allow rule edited'
        outcome: success
      17:
        action: 'Inbound MFA policy created'
        outcome: success
      18:
        action: 'Inbound MFA policy deleted'
        outcome: success
      19:
        action: 'Inbound MFA policy edited'
        outcome: success
      20:
        action: 'Inbound JIT rule created'
        outcome: success
      21:
        action: 'Inbound JIT rule deleted'
        outcome: success
      22:
        action: 'Inbound JIT rule expired'
        outcome: success
      23:
        action: 'Inbound JIT rule revived'
        outcome: success
      24:
        action: 'Inbound JIT rule edited'
        outcome: success
      25:
        action: 'API Token created'
        outcome: success
      26:
        action: 'API Token deleted'
        outcome: success
      27:
        action: 'API Token regenerated'
        outcome: success
      28:
        action: 'Asset protection date postponed'
        outcome: success
      29:
        action: 'Outbound block rule created'
        outcome: success
      30:
        action: 'Outbound block rule deleted'
        outcome: success
      31:
        action: 'Outbound block rule expired'
        outcome: success
      32:
        action: 'Outbound block rule edited'
        outcome: success
      33:
        action: 'Inbound block rule created'
        outcome: success
      34:
        action: 'Inbound block rule deleted'
        outcome: success
      35:
        action: 'Inbound block rule expired'
        outcome: success
      36:
        action: 'Inbound block rule edited'
        outcome: success
      39:
        action: 'Removed asset from protection (overriding policy)'
        outcome: success
      40:
        action: 'Asset is being removed from protection (overriding policy)'
        outcome: success
      41:
        action: 'Asset removed from learning (overriding policy)'
        outcome: success
      42:
        action: 'Asset is being added to protection (policy)'
        outcome: success
      43:
        action: 'Asset added to protection (policy)'
        outcome: success
      44:
        action: 'Asset added to learning (policy)'
        outcome: success
      45:
        action: 'Protection policy created'
        outcome: success
      46:
        action: 'Protection policy deleted'
        outcome: success
      47:
        action: 'Protection policy edited'
        outcome: success
      48:
        action: 'Inbound JIT access rejected'
        outcome: failure
      49:
        action: 'Inbound JIT fallback rule created'
        outcome: success
      50:
        action: 'Inbound JIT fallback rule deleted'
        outcome: success
      51:
        action: 'Inbound JIT fallback rule expired'
        outcome: success
      53:
        action: 'Outbound allow rule created'
        outcome: success
      54:
        action: 'Outbound allow rule deleted'
        outcome: success
      55:
        action: 'Outbound allow rule expired'
        outcome: success
      56:
        action: 'Outbound allow rule edited'
        outcome: success
      58:
        action: 'Admin portal role changed to admin'
        outcome: success
      59:
        action: 'Admin portal role changed to viewer'
        outcome: success
      60:
        action: 'Admin portal role revoked'
        outcome: success
      61:
        action: 'Outbound JIT rule created'
        outcome: success
      62:
        action: 'Outbound JIT rule deleted'
        outcome: success
      63:
        action: 'Outbound JIT rule expired'
        outcome: success
      64:
        action: 'Outbound MFA policy created'
        outcome: success
      65:
        action: 'Outbound MFA policy deleted'
        outcome: success
      66:
        action: 'Outbound MFA policy edited'
        outcome: success
      67:
        action: 'Outbound JIT access rejected'
        outcome: failure
      68:
        action: 'Asset learning is done'
        outcome: success
      69:
        action: 'Asset learning (policy) is done'
        outcome: success
      70:
        action: 'Manual Linux asset created'
        outcome: success
      71:
        action: 'Manual OT/IoT asset created'
        outcome: success
      72:
        action: 'Asset learning extended'
        outcome: success
      73:
        action: 'Admin portal logon'
        outcome: success
      74:
        action: 'Asset manager added'
        outcome: success
      75:
        action: 'Asset manager removed'
        outcome: success
      76:
        action: 'Asset is directly monitored'
        outcome: success
      77:
        action: 'Asset is no longer directly monitored'
        outcome: success
      78:
        action: 'Asset is remotely monitored'
        outcome: success
      79:
        action: 'Asset is back to learning'
        outcome: success
      80:
        action: 'Manual OT/IoT asset edited'
        outcome: success
      81:
        action: 'Admin portal role changed to operator'
        outcome: success
    source: >-
      ctx.event.kind = 'event';
      ctx.event.type = 'info';
      ctx.event.category = 'configuration';
      if (ctx?.event?.code == null) {
          return;
      }
      if (params.get(ctx.event.code) == null) {
          return;
      }
      def hm = new HashMap(params.get(ctx.event.code));
      hm.forEach((k, v) -> ctx.event[k] = v);
- remove:
    field:
      - json
    ignore_missing: true  
- remove:
    field: event.original
    if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
    ignore_failure: true
    ignore_missing: true
- script:
    lang: painless
    description: This script processor iterates over the whole document to remove fields with null values.
    source: |
      void handleMap(Map map) {
        for (def x : map.values()) {
          if (x instanceof Map) {
              handleMap(x);
          } else if (x instanceof List) {
              handleList(x);
          }
        }
        map.values().removeIf(v -> v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0));
      }
      void handleList(List list) {
        for (def x : list) {
            if (x instanceof Map) {
                handleMap(x);
            } else if (x instanceof List) {
                handleList(x);
            }
        }
        list.removeIf(v -> v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0));
      }
      handleMap(ctx);
on_failure:
- set:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'